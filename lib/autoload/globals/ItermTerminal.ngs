# iTerm2 detection is based on https://iterm2.com/utilities/it2check

doc %STATUS - experimental
type ItermTerminal(AnsiTerminal)


F init(it:ItermTerminal, *args) {
	super(it, *args)
	it._status_set_badge_format_done = false

}

F write_iterm_csi(it:ItermTerminal) it.write("\e]1337;")
F write_iterm_csi(it:ItermTerminal, s:Str) it.write_iterm_csi().write(s)
F write_iterm_cmd(it:ItermTerminal, s:Str) it.write_iterm_csi(s).write_st()

# https://www.iterm2.com/documentation-badges.html
F set_badge_format(it:ItermTerminal, fmt:Str) it.write_iterm_cmd("SetBadgeFormat=${fmt.encode_base64()}")

F set_user_var(it:ItermTerminal, k:Str, v:Str) it.write_iterm_cmd("SetUserVar=${k}=${v.encode_base64()}")

# TODO: Issue #205 - make status() configurable
F status(it:ItermTerminal, s:Str) {
	if not(it._status_set_badge_format_done) {
		it.set_badge_format("\\(user.status)")
		it._status_set_badge_format_done = true
		exit_hook["iterm_clear_status_badge:${it.fd_in}:${it.fd_out}"] = {
			it.set_badge_format("")
		}
	}
	it.set_user_var('status', s)
}

# TODO: https://iterm2.com/documentation-escape-codes.html

