#!/usr/bin/env ngs

tests_counter = 0

F perform_test(test_code:Str) {
	global tests_counter
	echo("+ Test: $test_code")
	c = "{ F() { $test_code }() }"
	program_bytecode = compile(c, '<test>')
	program_func = load(program_bytecode, '<test>')
	result = program_func()
	(result != true) and (result is not MatchSuccess) throws Error("Test failed: $test_code. Returned $result")
	tests_counter += 1
}

F perform_tests_in_file(file:Str) {
	# TODO: also other files
	File(file).lines(F(line) {
		# dump(line)
		if m = line ~ /^\s*TEST (.*?)( THROWS (\w+))?$/ {
			test_code = m[1]
			if e = m.get(3) {
				test_code = "try { ${test_code} ; false } catch(e:${e}) true"
			}
			perform_test(test_code)
		}
	})
}

base_dir = ENV.get('NGS_TESTS_BASE_DIR', `line: dirname ${realpath(ARGV0)}` / 'lib')
files = %[lang-tests.ngs stdlib.ngs].map(base_dir / X) + ``find "${base_dir}/autoload" -name '*.ngs'``

files.each(perform_tests_in_file)

assert(tests_counter > 540)
echo("OK. Tests: ${tests_counter}")
